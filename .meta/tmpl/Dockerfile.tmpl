{{ $golang := index .config.tools "golang/go" -}}

{{ $github := .config.tools.github -}}
{{ $golangci_lint := index $github "golangci/golangci-lint" -}}
{{ $terraform := index $github "hashicorp/terraform" -}}
{{ $terragrunt := index $github "gruntwork-io/terragrunt" -}}
{{ $tflint := index $github "terraform-linters/tflint" -}}
{{ $tflint_aws := index $github "terraform-linters/tflint-ruleset-aws" -}}
{{ $tfsec := index $github "aquasecurity/tfsec" -}}
{{ $terraform_docs := index $github "terraform-docs/terraform-docs" -}}
{{ $terrascan := index $github "tenable/terrascan" -}}
{{ $hadolint := index $github "hadolint/hadolint" -}}
{{ $helm := index $github "helm/helm" -}}
{{ $helmfile := index $github "roboll/helmfile" -}}
{{ $helm_diff := index $github "databus23/helm-diff" -}}
{{ $kubectx := index $github "ahmetb/kubectx" -}}
{{ $argocd := index $github "argoproj/argo-cd" -}}
{{ $just := index $github "casey/just" -}}
{{ $direnv := index $github "direnv/direnv" -}}
{{ $starship := index $github "starship/starship" -}}
{{ $sops := index $github "getsops/sops" -}}
{{ $drone := index $github "harness/drone-cli" -}}
{{ $gitleaks := index $github "gitleaks/gitleaks" -}}
{{ $neovim := index $github "neovim/neovim" -}}
{{ $fzf := index $github "junegunn/fzf" -}}
{{ $crossplane := index $github "crossplane/crossplane" -}}
{{ $terraform_backend_git := index $github "plumber-cd/terraform-backend-git" -}}
{{ $age := index $github "FiloSottile/age" -}}
{{ $vault := index $github "hashicorp/vault" -}}
{{ $aws_nuke := index $github "rebuy-de/aws-nuke" -}}
{{ $jump := index $github "gsamokovarov/jump" -}}

{{ $kubectl_tree := index $github "ahmetb/kubectl-tree" -}}
{{ $kube_lineage := index $github "tohjustin/kube-lineage" -}}
{{ $kubectl_neat := index $github "itaysk/kubectl-neat" -}}
{{ $ketall := index $github "corneliusweig/ketall" -}}
{{ $astronvim := index $github "AstroNvim/AstroNvim" -}}

{{ $op := index .config.tools "1password" -}}
{{ $kubectl := index .config.tools "kubernetes/kubectl" -}}
{{ $awscli := index .config.tools "aws/aws-cli" -}}
{{ $gcloud := index .config.tools "GoogleCloudPlatform/cloud-sdk-docker" -}}

{{ define "apt-get install" }}
# hadolint ignore=DL3008
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
    {{ join . " " }} \
    && rm -rf /var/lib/apt/lists/*
{{ end -}}

{{ define "json-map" -}}
'{ \
    {{- $last := index (. | keys | reverse) 0 }}
{{- range $p, $v := . }}
{{- if $v }}
"{{ $p }}": "{{ $v }}"
{{- if ne $p $last }},{{ end }} \
    {{- end }}
{{- end }}
}'
{{- end }}

FROM {{ tpl "image" .config.image (dict "version" $golang) }} as core

{{ template "apt-get install" (slice "bash" "curl" "git" "openssh-client" "jq" "nano" "bash-completion" "unzip") }}

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

ENV EDITOR nano

FROM core as terragrunt
RUN curl -fL https://github.com/gruntwork-io/terragrunt/releases/download/v{{ $terragrunt }}/terragrunt_linux_amd64 -o /tmp/terragrunt \
    && chmod +x /tmp/terragrunt

FROM core as tflint
RUN curl -fL https://github.com/terraform-linters/tflint/releases/download/v{{ $tflint }}/tflint_linux_amd64.zip -o /tmp/tflint.zip \
    && unzip /tmp/tflint.zip -d /tmp/ && rm /tmp/tflint.zip

FROM core as tflint_aws
RUN curl -fL https://github.com/terraform-linters/tflint-ruleset-aws/releases/download/v{{ $tflint_aws }}/tflint-ruleset-aws_linux_amd64.zip -o /tmp/tflint-ruleset-aws.zip \
    && unzip /tmp/tflint-ruleset-aws.zip -d /tmp/ && rm /tmp/tflint-ruleset-aws.zip

FROM core as tfsec
RUN curl -fL https://github.com/aquasecurity/tfsec/releases/download/v{{ $tfsec }}/tfsec-linux-amd64 -o /tmp/tfsec \
    && chmod +x /tmp/tfsec

FROM core as terraform_docs
# hadolint ignore=DL4006
RUN curl -fL https://github.com/terraform-docs/terraform-docs/releases/download/v{{ $terraform_docs }}/terraform-docs-v{{ $terraform_docs }}-linux-amd64.tar.gz | tar zx \
    && mv terraform-docs /tmp

FROM core as terrascan
# hadolint ignore=DL4006
RUN curl -fL https://github.com/tenable/terrascan/releases/download/v{{ $terrascan }}/terrascan_{{ $terrascan }}_Linux_x86_64.tar.gz | tar zx \
    && mv terrascan /tmp

FROM core as just
# hadolint ignore=DL4006
RUN curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /tmp/ --tag {{ $just }}

FROM core as direnv
RUN curl -fL https://github.com/direnv/direnv/releases/download/v{{ $direnv }}/direnv.linux-amd64 -o /tmp/direnv \
    && chmod +x /tmp/direnv

FROM core as fzf
# hadolint ignore=DL4006
RUN curl -fL https://github.com/junegunn/fzf/releases/download/{{ $fzf }}/fzf-{{ $fzf }}-linux_amd64.tar.gz | tar zx \
    && mv fzf /tmp

FROM core as hadolint
RUN curl -fL https://github.com/hadolint/hadolint/releases/download/v{{ $hadolint }}/hadolint-Linux-x86_64 -o /tmp/hadolint \
    && chmod +x /tmp/hadolint

FROM core as jump
RUN curl -fL https://github.com/gsamokovarov/jump/releases/download/v{{ $jump }}/jump_linux_amd64_binary -o /tmp/jump \
    && chmod +x /tmp/jump

FROM core as op
RUN curl -fL https://cache.agilebits.com/dist/1P/op/pkg/v{{ $op }}/op_linux_amd64_v{{ $op }}.zip -o /tmp/op.zip \
    && unzip /tmp/op.zip -d /tmp/ && rm /tmp/op.zip

{{ if .config.tools.enabled.kubernetes -}}
FROM core as kubectl
RUN curl -fL https://storage.googleapis.com/kubernetes-release/release/v{{ $kubectl }}/bin/linux/amd64/kubectl -o /tmp/kubectl \
    && chmod +x /tmp/kubectl

FROM core as helm
# hadolint ignore=DL4006
RUN curl -fL https://get.helm.sh/helm-v{{ $helm }}-linux-amd64.tar.gz | tar zx \
    && mv linux-amd64/helm /tmp/helm

FROM core as helmfile
RUN curl -fL "https://github.com/roboll/helmfile/releases/download/v{{ $helmfile }}/helmfile_linux_amd64" -o /tmp/helmfile \
    && chmod +x /tmp/helmfile

FROM core as kubectx
# hadolint ignore=DL4006
RUN curl -fL https://github.com/ahmetb/kubectx/releases/download/v{{ $kubectx }}/kubectx_v{{ $kubectx }}_linux_x86_64.tar.gz | tar zx \
    && cp kubectx /tmp

FROM core as kubens
# hadolint ignore=DL4006
RUN curl -fL https://github.com/ahmetb/kubectx/releases/download/v{{ $kubectx }}/kubens_v{{ $kubectx }}_linux_x86_64.tar.gz | tar zx \
    && cp kubens /tmp

FROM core as argocd
RUN curl -fL https://github.com/argoproj/argo-cd/releases/download/v{{ $argocd }}/argocd-linux-amd64 -o /tmp/argocd \
    && chmod +x /tmp/argocd

FROM core as crossplane
# hadolint ignore=DL4006
RUN curl -fL https://releases.crossplane.io/stable/v{{ $crossplane }}/bin/linux_amd64/crank -o /tmp/kubectl-crossplane \
    && chmod +x /tmp/kubectl-crossplane

FROM core as kubectl_tree
# hadolint ignore=DL4006
RUN curl -fL "https://github.com/ahmetb/kubectl-tree/releases/download/v{{ $kubectl_tree }}/kubectl-tree_v{{ $kubectl_tree }}_linux_amd64.tar.gz" | tar zx \
    && mv kubectl-tree /tmp

FROM core as kube_lineage
# hadolint ignore=DL4006
RUN curl -fL "https://github.com/tohjustin/kube-lineage/releases/download/v{{ $kube_lineage }}/kube-lineage_linux_amd64.tar.gz" | tar zx \
    && mv kube-lineage /tmp

FROM core as kubectl_neat
# hadolint ignore=DL4006
RUN curl -fL "https://github.com/itaysk/kubectl-neat/releases/download/v{{ $kubectl_neat }}/kubectl-neat_linux_amd64.tar.gz" | tar zx \
    && mv kubectl-neat /tmp

FROM core as ketall
# hadolint ignore=DL4006
RUN curl -fL "https://github.com/corneliusweig/ketall/releases/download/v{{ $ketall }}/ketall-amd64-linux.tar.gz" | tar zx \
    && mv ketall-amd64-linux /tmp/ketall

{{- end }}

FROM core as drone
# hadolint ignore=DL4006
RUN curl -fL https://github.com/harness/drone-cli/releases/download/v{{ $drone }}/drone_linux_amd64.tar.gz | tar zx \
    && cp drone /tmp

FROM core as sops
RUN curl -fL https://github.com/getsops/sops/releases/download/v{{ $sops }}/sops-v{{ $sops }}.linux.amd64  -o /tmp/sops \
    && chmod +x /tmp/sops

FROM core as gitleaks
# hadolint ignore=DL4006
RUN curl -fL https://github.com/zricethezav/gitleaks/releases/download/v{{ $gitleaks }}/gitleaks_{{ $gitleaks }}_linux_x64.tar.gz | tar zx \
    && mv gitleaks /tmp

FROM core as golangci_lint
# hadolint ignore=DL4006
RUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/v{{ $golangci_lint }}/install.sh | sh -s -- -b /tmp v{{ $golangci_lint }}

FROM core as terraform_backend_git
# hadolint ignore=DL4006
RUN curl -fL "https://github.com/plumber-cd/terraform-backend-git/releases/download/v{{ $terraform_backend_git }}/terraform-backend-git-linux-amd64"  -o /tmp/terraform-backend-git \
    && chmod +x /tmp/terraform-backend-git

FROM core as age
# hadolint ignore=DL4006
RUN curl -fL "https://github.com/FiloSottile/age/releases/download/v{{ $age }}/age-v{{ $age }}-linux-amd64.tar.gz" | tar zx \
    && mv age/age age/age-keygen /tmp

{{ if $gcloud -}}
FROM core as gcloud
# hadolint ignore=DL3003,DL4006
RUN cd /opt && curl -fL "https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-{{ $gcloud }}-linux-x86_64.tar.gz" | tar zx
{{- end }}

FROM core as awscliv2
RUN tmp="$(mktemp -d)" \
    && cd "$tmp" \
    && curl -Lf "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-{{ $awscli }}.zip" -o "awscliv2.zip" \
    && unzip awscliv2.zip \
    && mkdir -p /tmp/awscliv2 \
    && (shopt -s dotglob && mv ./aws/* /tmp/awscliv2) \
    && rm -rf "$tmp"

FROM core as neovim
RUN cd /opt && curl -fL "https://github.com/neovim/neovim/releases/download/v{{ $neovim }}/nvim-linux64.tar.gz" | tar zx

FROM core as build

{{ template "apt-get install" (slice "python3" "python3-pip" "less" "groff" "bash") }}

{{ template "apt-get install" .config.extraPackages }}

RUN pip3 install --break-system-packages --no-cache-dir \
    {{ range $p, $v := .config.tools.pip -}}
{{ $p }}=={{ $v }} \
    {{ end }};

{{ if $gcloud -}}
#gcloud

COPY --from=gcloud /opt/google-cloud-sdk /opt/google-cloud-sdk

ENV PATH="/opt/google-cloud-sdk/bin:${PATH}"
RUN gcloud config set core/disable_usage_reporting true \
    && gcloud config set component_manager/disable_update_check true \
    && gcloud config set metrics/environment github_docker_image \
    && gcloud --version

ENV GCLOUD_CLI_VERSION="{{ $gcloud }}"
{{- end }}

#awscliv2

RUN --mount=type=bind,from=awscliv2,source=/tmp/awscliv2,target=/tmp/awscliv2 /tmp/awscliv2/install

ENV AWS_CLI_VERSION="{{ $awscli }}"


# hadolint ignore=DL3059
RUN mkdir -p /etc/tflint.d/plugins
ENV TFLINT_PLUGIN_DIR /etc/tflint.d/plugins

# hadolint ignore=DL4006
RUN sh -c "$(curl -fsSL https://starship.rs/install.sh | sed 's|latest/download|download/v{{ $starship }}|g')" -- -y

COPY --from=hashicorp/terraform:{{ $terraform }} /bin/terraform /usr/local/bin/terraform
COPY --from=terragrunt /tmp/terragrunt /usr/local/bin/terragrunt
COPY --from=tflint /tmp/tflint /usr/local/bin/tflint
COPY --from=tflint_aws /tmp/tflint-ruleset-aws $TFLINT_PLUGIN_DIR/tflint-ruleset-aws
COPY --from=tfsec /tmp/tfsec /usr/local/bin/tfsec
COPY --from=terraform_docs /tmp/terraform-docs /usr/local/bin/terraform-docs
COPY --from=terrascan /tmp/terrascan /usr/local/bin/terrascan
COPY --from=just /tmp/just /usr/local/bin/just
COPY --from=direnv /tmp/direnv /usr/local/bin/direnv
COPY --from=op /tmp/op /usr/local/bin/op
COPY --from=sops /tmp/sops /usr/local/bin/sops
COPY --from=drone /tmp/drone /usr/local/bin/drone
{{ if .config.tools.enabled.kubernetes -}}
COPY --from=kubectl /tmp/kubectl /usr/local/bin/kubectl
COPY --from=helm /tmp/helm /usr/local/bin/helm
COPY --from=helmfile /tmp/helmfile /usr/local/bin/helmfile
COPY --from=kubectx /tmp/kubectx /usr/local/bin/kctx
COPY --from=kubens /tmp/kubens /usr/local/bin/kns
COPY --from=kubectl_tree /tmp/kubectl-tree /usr/local/bin/kubectl-tree
COPY --from=kube_lineage /tmp/kube-lineage /usr/local/bin/kubectl-lineage
COPY --from=kubectl_neat /tmp/kubectl-neat /usr/local/bin/kubectl-neat
COPY --from=ketall /tmp/ketall /usr/local/bin/ketall
COPY --from=crossplane /tmp/kubectl-crossplane /usr/local/bin/kubectl-crossplane
COPY --from=argocd /tmp/argocd /usr/local/bin/argocd
{{- end }}
COPY --from=hadolint /tmp/hadolint /usr/local/bin/hadolint
COPY --from=gitleaks /tmp/gitleaks /usr/local/bin/gitleaks
COPY --from=fzf /tmp/fzf /usr/local/bin/fzf
COPY --from=terraform_backend_git /tmp/terraform-backend-git /usr/local/bin/terraform-backend-git
COPY --from=age /tmp/age /usr/local/bin/age
COPY --from=age /tmp/age-keygen /usr/local/bin/age-keygen
COPY --from=hashicorp/vault:{{ $vault }} /bin/vault /usr/local/bin/vault
{{ if $aws_nuke -}}
{{- end }}
COPY --from=jump /tmp/jump /usr/local/bin/jump
COPY --from=neovim /opt/nvim-linux64 /opt/neovim

RUN ln -s /opt/neovim/bin/nvim /usr/local/bin/nvim

ENV GITHUB_VERSIONS={{ template "json-map" $github }}

ENV PIP_VERSIONS={{ template "json-map" .config.tools.pip }}

{{ if .config.tools.enabled.kubernetes -}}
RUN completion="/usr/share/zsh/functions/Completion" \
    && kubectl completion zsh > "$completion/_kubectl.zsh" \
    && curl -fsL "https://raw.githubusercontent.com/ahmetb/kubectx/v{{ $kubectx }}/completion/_kubens.zsh" -o "$completion/_kubens.zsh" \
    && curl -fsL "https://raw.githubusercontent.com/ahmetb/kubectx/v{{ $kubectx }}/completion/_kubectx.zsh" -o "$completion/_kubectx.zsh" \
    && helm completion zsh > "$completion/_helm.zsh"
{{- end }}

RUN just --completions zsh > "$completion/_just.zsh" \
    && gitleaks completion zsh > "$completion/_gitleaks.zsh" \
    && mkdir -p /usr/share/fzf/ \
    && curl -fsL "https://raw.githubusercontent.com/junegunn/fzf/{{ $fzf }}/shell/key-bindings.zsh" -o "/usr/share/fzf/key-bindings.zsh" \
    && curl -fsL "https://raw.githubusercontent.com/junegunn/fzf/{{ $fzf }}/shell/completion.zsh" -o "/usr/share/fzf/completion.zsh"

ARG home="/home/user"
RUN adduser --home "$home" --shell /bin/usr/zsh --uid 1000 --disabled-password {{ .config.username }} \
    && mkdir "$home/.config" && chown 1000:1000 "$home/.config"

USER 1000

ENV CGO_ENABLED=0
ARG workdir="/workspace"

{{ $zsh_autosuggestions := index .config.tools "zsh-users/zsh-autosuggestions" -}}
{{ $zsh_syntax_highlighting := index .config.tools "zsh-users/zsh-syntax-highlighting" -}}
{{ $zsh_completions := index .config.tools "zsh-users/zsh-completions" -}}
{{ $zsh_notify := index .config.tools "marzocchi/zsh-notify" -}}

RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" --keep-zshrc \
    && plugins="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins" \
    && git clone https://github.com/zsh-users/zsh-autosuggestions.git --depth 1 --branch v{{ $zsh_autosuggestions }} "$plugins/zsh-autosuggestions" \
    && git clone https://github.com/zsh-users/zsh-syntax-highlighting.git --depth 1 --branch {{ $zsh_syntax_highlighting }} "$plugins/zsh-syntax-highlighting" \
    && git clone https://github.com/zsh-users/zsh-completions.git --depth 1 --branch {{ $zsh_completions }} "$plugins/zsh-completions" \
    && find "$plugins" -name .git -type d -prune -exec rm -rf {} \;

RUN mv "$home/.zshrc" "$home/.zshrc_original" \
    && ln -s "$workdir/.ws/.meta/zsh/.zshrc" "$home/.zshrc"

RUN git clone --depth 1 --branch v{{ $astronvim }} https://github.com/AstroNvim/AstroNvim ~/.config/nvim \
    && git clone --depth 1 https://github.com/vtvz/astronvim ~/.config/astronvim/lua

{{ if .config.tools.enabled.kubernetes -}}
# hadolint ignore=DL3059
RUN helm plugin install "https://github.com/databus23/helm-diff" --version "v{{ $helm_diff }}"
{{- end }}

ENV PATH="$workdir/.ws/.meta/bin:${PATH}"
ENV DIRENV_CONFIG="$workdir/.ws/.meta/direnv"
ENV STARSHIP_CONFIG="$workdir/.ws/.meta/starship/config.toml"
{{- if $gcloud }}
ENV CLOUDSDK_CONFIG="$workdir/.ws/.meta/var/gcloud"
{{- end }}
ENV TF_PLUGIN_CACHE_DIR="$workdir/.ws/.meta/var/tf/plugin-cache"

WORKDIR $workdir

ENTRYPOINT []
